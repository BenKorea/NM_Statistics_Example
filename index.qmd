---
title: "R-4.4.1-NM_Statistics_Example"
---

This is a Quarto website.

To learn more about Quarto websites visit <https://quarto.org/docs/websites>.

```{r}
1 + 1
```

```{shinylive-r}
#| label: histogram_example
#| standalone: true
#| viewerHeight: 500


library(shiny)

ui <- fluidPage(
  titlePanel("Hello Shiny!"),
  sidebarLayout(
    sidebarPanel(
      sliderInput(
        inputId = "bins",
        label = "Number of bins:",
        min = 1,
        max = 50,
        value = 30
      )
    ),
    mainPanel(
      plotOutput(outputId = "distPlot")
    )
  )
)

server <- function(input, output) {
  output$distPlot <- renderPlot({
    x <- faithful$waiting
    bins <- seq(min(x), max(x), length.out = input$bins + 1)
    hist(x,
         breaks = bins, col = "#75AADB", border = "white",
         xlab = "Waiting time to next eruption (in mins)",
         main = "Histogram of waiting times"
    )
  })
}

shinyApp(ui = ui, server = server)

```

```{r}
#| label: single API call

library(rjson)
library(httr)
library(plyr)

download_api_data <- function() {
  base_url <- "http://apis.data.go.kr/B551182/hospInfoServicev2"
  call_url <- "getHospBasisList"
  My_API_Key <- "DRwFWZ/jfi6551teJKgRhkKgC+XhcjobN+ccY2MQdF9yZdx8xL5Kn4IljljMCWGsl2ObEco/rm21r14CN7iG0g=="  # 실제 API 키
  params <- list(
    serviceKey = My_API_Key
  )
  
  # API 호출
  url <- paste0(base_url, "/", call_url)
  response <- GET(url, query = params)

  if (status_code(response) == 200) {
    json_text <- content(response, as = "text")
    data <- fromJSON(json_text)
    return(data)
  } else {
    print(paste("API 호출 실패:", status_code(response)))
    return(NULL)
  }
}

data <- download_api_data()
data_list<-data$response$body$items$item
df <- rbind.fill(lapply(data_list, as.data.frame))
print(df)

```

```{r}
#| label: pageNo_call

library(rjson)
library(httr)
library(plyr)


download_api_data <- function(page_No) {
  base_url <- "http://apis.data.go.kr/B551182/hospInfoServicev2"
  call_url <- "getHospBasisList"
  My_API_Key <- "DRwFWZ/jfi6551teJKgRhkKgC+XhcjobN+ccY2MQdF9yZdx8xL5Kn4IljljMCWGsl2ObEco/rm21r14CN7iG0g=="  # 실제 API 키
  params <- list(
    serviceKey = My_API_Key,
    pageNo = page_No
  )
  
  # API 호출
  url <- paste0(base_url, "/", call_url)
  response <- GET(url, query = params)

  if (status_code(response) == 200) {
    json_text <- content(response, as = "text", encoding = "UTF-8")
    data <- fromJSON(json_text)
    return(data)
  } else {
    print(paste("API 호출 실패:", status_code(response)))
    return(NULL)
  }
}

data_list_all <- list()
data_frame <- data.frame()
page_No <- 0
while (TRUE) {
  page_No <- page_No + 1
  data <- download_api_data(page_No)
  
  if (is.null(data) || is.null(data$response$body$items$item)) {
    message("데이터가 더 이상 없습니다. 마지막 페이지: ", page_No)
    break
  }
  
  data_list<-data$response$body$items$item
  data_list_all[[page_No]] <- lapply(data_list, as.data.frame)  # 데이터를 리스트로 저장
  print(page_No)
}

data_frame <- rbind.fill(do.call(c, data_list_all))

```